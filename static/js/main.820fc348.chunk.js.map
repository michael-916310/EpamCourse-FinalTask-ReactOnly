{"version":3,"sources":["lib.js","Components/ModalComp/ModalComp.js","Components/SearchComp/SearchComp.js","Components/Modal2ButtonsComp/Modal2ButtonsComp.js","Components/FilmCardComp/FilmCardComp.js","Components/FilmListComp/FilmListComp.js","Components/FooterComp/FooterComp.js","Components/SpinnerComp/SpinnerComp.js","Pages/SearchPage/SearchPage.js","Components/FilmDetailComp/FilmDetailComp.js","Pages/FilmPage/FilmPage.js","Pages/FavoritesPage/FavoritesPage.js","App.js","index.js"],"names":["baseDeployURL","getFilmList","searchString","searchArray","byTitle","byDirector","byID","fetch","then","response","ok","json","Error","status","data","catch","e","console","log","fullList","filter","el","i","title","toUpperCase","id","includes","director","ModalComp","props","document","createElement","modalRoot","getElementById","this","appendChild","removeChild","ReactDOM","createPortal","children","React","Component","SearchComp","handleSubmit","preventDefault","querySelector","value","onSubmit","setState","showModalEmptySearch","handleByTitleClick","onSearchByChange","handleByDirectorClick","handleCloseModal","handleGoToFavorites","window","location","assign","state","byTitleClassName","byDirectorClassName","searchByTitle","className","type","onClick","onChange","onSearchStringChange","Modal2ButtonsComp","message","actionButtonName","onActionClick","onCloseClick","FilmCardComp","handleOpenModalClick","flagAddToFavorites","showModalAddToFavorites","flagRemoveFromFavorites","showModalRemoveFromFavorites","handleAddClick","favString","localStorage","getItem","favArr","split","setItem","join","handleCloseClick","handleRemoveClick","newFav","item","Number","refreshFilms","src","posterUrl","alt","onPosterClick","year","genres","runtime","FilmListComp","href","listElement","filmList","map","key","toString","handlePosterClick","renderFirstLine","FooterComp","SpinnerComp","isLoading","SearchPage","URLFilm","match","params","filmName","url","URL","searchParams","has","URLSearchByTitle","Boolean","get","handleSearchStringChange","bind","handleSearchByChange","handleSearch","handleSortByRuntime","handleSortByDate","target","isbyTitle","result","origin","set","byDate","compare","item1","item2","newList","sort","sortFilms","length","loadFilmListToState","Fragment","renderFistLine","FilmDetailComp","plot","actors","FilmPage","filmTitle","filmDesc","Array","isArray","getFilmDesc","getFilmListByDirector","FavoritesPage","getFavoritesArray","loadFilmById","idArray","favoritesList","handleGoToSerach","App","basename","path","component","render","StrictMode"],"mappings":"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","file":"static/js/main.820fc348.chunk.js","sourcesContent":["const url=\"https://my-json-server.typicode.com/michael-916310/my-json-server/movies\";\r\nexport const baseDeployURL=\"/EpamCourse-ReactOnly-Deploy\";\r\n\r\nfunction loadFilmList (){\r\n  return fetch(url)\r\n  .then(response => {\r\n    if (response.ok) {\r\n      return response.json()\r\n    } else {\r\n      throw new Error(`Fetching data-wrong response-status:${response.status}`);\r\n    }\r\n  }) \r\n  .then(data => {\r\n    return data;\r\n  })\r\n  .catch(e=>console.log(e));\r\n}\r\n\r\nexport function getFilmList({searchString, searchArray, byTitle, byDirector, byID}){\r\n\r\n  return loadFilmList()\r\n    .then((fullList)=>{\r\n\r\n      return fullList.filter((el)=>{\r\n        let i;\r\n        if (byTitle) {\r\n          i = el.title.toUpperCase();\r\n        } else if (byDirector) {\r\n          i = el.director.toUpperCase();\r\n        } else if (byID) {\r\n          i = el.id;\r\n          return searchArray.includes(i);\r\n        } else {\r\n          return false;\r\n        }\r\n        \r\n        return i.includes(searchString.toUpperCase())\r\n      })\r\n\r\n    })\r\n\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './ModalComp.scss';\r\n\r\nexport class ModalComp extends React.Component{\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.el = document.createElement('div');\r\n    this.modalRoot = document.getElementById('modal-root');\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.modalRoot.appendChild(this.el);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.modalRoot.removeChild(this.el);\r\n  }\r\n\r\n  render() {\r\n    return ReactDOM.createPortal(\r\n      this.props.children,\r\n      this.el\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './SearchComp.scss';\r\nimport {ModalComp} from './../ModalComp/ModalComp';\r\nimport {baseDeployURL} from './../../lib';\r\n\r\n\r\nexport class SearchComp extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      showModalEmptySearch:false,\r\n    }\r\n  }\r\n\r\n  handleSubmit =(e) => {\r\n    e.preventDefault();\r\n    let el = document.querySelector(\".search-comp__search-string\");\r\n    if (el) {\r\n      if (el.value) {\r\n        this.props.onSubmit();\r\n        return;\r\n      }\r\n    }\r\n    this.setState({\r\n      showModalEmptySearch:true,\r\n    });\r\n  }\r\n\r\n  handleByTitleClick =()=>{\r\n    this.props.onSearchByChange(true);\r\n  }\r\n\r\n  handleByDirectorClick = ()=>{\r\n    this.props.onSearchByChange(false);\r\n  }\r\n  \r\n  handleCloseModal= ()=> {\r\n    this.setState({\r\n      showModalEmptySearch:false,\r\n    });\r\n  }\r\n\r\n  handleGoToFavorites=()=>{\r\n    window.location.assign(`${baseDeployURL}/favorites`)\r\n  }\r\n\r\n  render(){\r\n\r\n    let byTitleClassName=\"search-comp__search-by-title\";\r\n    let byDirectorClassName=\"search-comp__search-by-director\";\r\n    if (this.props.searchByTitle) {\r\n      byTitleClassName = byTitleClassName + \" search-comp__search-by_selected\"\r\n    } else {\r\n      byDirectorClassName = byDirectorClassName + \" search-comp__search-by_selected\"\r\n    }\r\n\r\n    return (\r\n      <div className=\"search-comp-outer-container\">\r\n        <div className=\"search-comp-inner-container\">\r\n\r\n          <div className=\"search-comp__caption1\">\r\n            netflixroulette\r\n            <input \r\n              type='button' \r\n              className=\"search-comp__button\" \r\n              onClick={this.handleGoToFavorites}\r\n              value='Go to FAVORITES'/>\r\n          </div>\r\n          <div className=\"search-comp__caption2\">FIND YOUR MOVIE</div>\r\n\r\n          <form onSubmit={this.handleSubmit} >\r\n\r\n            <input type=\"text\"\r\n              className=\"search-comp__search-string\"\r\n              onChange={this.props.onSearchStringChange}\r\n              value={this.props.searchString}\r\n            />\r\n          \r\n            <div className=\"search-comp__buttom-line\">\r\n              <div>\r\n                <span className=\"search-comp__search-by-caption\">SEARCH BY</span>\r\n                <input className={byTitleClassName} type=\"button\" onClick={this.handleByTitleClick} value=\" TITLE \"/>\r\n                <input className={byDirectorClassName} type=\"button\" onClick={this.handleByDirectorClick} value=\"DIRECTOR\"/>\r\n              </div>\r\n\r\n              <div>\r\n                <input className=\"search-comp__button\" type=\"submit\" value=\"  SEARCH  \"/>\r\n              </div>\r\n            </div>  \r\n\r\n          </form>\r\n\r\n          {this.state.showModalEmptySearch && (\r\n          <ModalComp>\r\n            <div className='search-comp__modal-nothing-to-search-background'>\r\n              <div className='search-comp__modal-nothing-to-search-outer-container'>\r\n                There is nothing to search. Please enter non empty string to search.\r\n                <div className='search-comp__modal-nothing-to-search-button-container'>\r\n                  <input \r\n                    className='search-comp__modal-nothing-to-search-button' \r\n                    type='button' value='CLOSE' onClick={this.handleCloseModal}/>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </ModalComp> )}\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport {ModalComp} from './../ModalComp/ModalComp';\r\nimport  './Modal2ButtonsComp.scss';\r\n\r\nexport function Modal2ButtonsComp(props){\r\n\r\n  return(\r\n    <ModalComp>\r\n      <div className='modal-2-buttons__background'>\r\n        <div className='modal-2-buttons__outer-container'>\r\n          <div>\r\n            {props.message}\r\n          </div>\r\n          <div className='modal-2-buttons__button-container'>\r\n            <input \r\n              className='modal-2-buttons__action-button' \r\n              type=\"button\" \r\n              value={props.actionButtonName}\r\n              onClick={props.onActionClick}/>\r\n            <input \r\n              className='modal-2-buttons__action-button' \r\n              type=\"button\" \r\n              value=\"CLOSE\"\r\n              onClick={props.onCloseClick}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </ModalComp>\r\n  )\r\n}","import React from 'react';\r\nimport './FilmCardComp.scss';\r\nimport {Modal2ButtonsComp} from './../Modal2ButtonsComp/Modal2ButtonsComp';\r\nimport {baseDeployURL} from './../../lib';\r\n\r\nexport class FilmCardComp extends React.Component { \r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      showModalAddToFavorites: false,\r\n      showModalRemoveFromFavorites: false\r\n    }\r\n  }\r\n\r\n  handleOpenModalClick=()=>{\r\n    if (this.props.flagAddToFavorites) {\r\n      this.setState({\r\n        showModalAddToFavorites: true,\r\n      });\r\n    } else if (this.props.flagRemoveFromFavorites) {\r\n      this.setState({\r\n        showModalRemoveFromFavorites:true, \r\n      })\r\n    }\r\n  }\r\n\r\n  handleAddClick=()=>{\r\n    const favString = localStorage.getItem('favoritesArray');\r\n    if (favString) {\r\n      let favArr = favString.split(',');\r\n      if (!favArr.includes(\"\"+this.props.id)) {\r\n        localStorage.setItem('favoritesArray', [...favArr, [this.props.id]].join(','));\r\n      }\r\n    } else {\r\n      localStorage.setItem('favoritesArray', [this.props.id].join(','));\r\n    }\r\n\r\n    this.setState({\r\n      showModalAddToFavorites: false,\r\n    });\r\n  }\r\n\r\n  handleCloseClick=()=>{\r\n    this.setState({\r\n      showModalAddToFavorites: false,\r\n      showModalRemoveFromFavorites: false,\r\n    });\r\n  }\r\n\r\n  handleRemoveClick=(id)=>{\r\n    const favString = localStorage.getItem('favoritesArray');\r\n    if (favString) {\r\n      const favArr = favString.split(',');\r\n      const newFav= favArr.filter((item)=>{return !( Number(item) == Number(id) )})\r\n      localStorage.setItem('favoritesArray', newFav.join(','));\r\n    }\r\n\r\n    this.handleCloseClick();\r\n    this.props.refreshFilms();\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className='film-card-comp-container'>\r\n        \r\n        <img \r\n          className='film-card-comp__poster' \r\n          src={this.props.posterUrl} alt='film poster'\r\n          onClick={this.props.onPosterClick}\r\n        />\r\n        \r\n        <div className='film-card-comp__line1'>\r\n          <span className='film-card-comp__title'>{this.props.title}</span>\r\n          <span className='film-card-comp__year'>{this.props.year}</span>\r\n        </div>\r\n\r\n        <div className='film-card-comp__line2'>\r\n          <div>\r\n            {this.props.genres} <br/>\r\n            Runtime: {this.props.runtime} minute <br/>\r\n            Director: {this.props.director}\r\n          </div>\r\n          <img \r\n            className=\"film-card-comp__star\" \r\n            src={`${baseDeployURL}/img/favorites_star.ico`} alt='star'\r\n            onClick={this.handleOpenModalClick}/>\r\n        </div>\r\n\r\n        {this.state.showModalAddToFavorites && (\r\n          <Modal2ButtonsComp\r\n            message={`Add film \"${this.props.title}\" by \"${this.props.director}\" to favorites?`}\r\n            actionButtonName = 'ADD'\r\n            onActionClick={this.handleAddClick}\r\n            onCloseClick={this.handleCloseClick}\r\n          />\r\n        )}\r\n\r\n        {this.state.showModalRemoveFromFavorites && (\r\n          <Modal2ButtonsComp\r\n            message={`Remove film \"${this.props.title}\" by \"${this.props.director}\" from favorites?`}\r\n            actionButtonName = 'REMOVE'\r\n            onActionClick={()=>this.handleRemoveClick(this.props.id)}\r\n            onCloseClick={this.handleCloseClick}\r\n          />\r\n        )}\r\n\r\n    </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport {FilmCardComp} from '../FilmCardComp/FilmCardComp'\r\n\r\nimport './FilmListComp.scss';\r\nimport {baseDeployURL} from './../../lib';\r\n\r\nexport class FilmListComp extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n  }\r\n\r\n  handlePosterClick(title){\r\n    window.location.href=`${baseDeployURL}/film/${title}`\r\n  }\r\n\r\n  render(){\r\n    let listElement = this.props.filmList.map((item)=>\r\n    <FilmCardComp\r\n      key={item.id}\r\n      id={item.id}\r\n      posterUrl={item.posterUrl}\r\n      year = {item.year}\r\n      genres={item.genres.toString()}\r\n      title = {item.title}\r\n      director = {item.director}\r\n      runtime = {item.runtime}\r\n      onPosterClick = {()=>this.handlePosterClick(item.title)}\r\n      flagAddToFavorites ={this.props.flagAddToFavorites}\r\n      flagRemoveFromFavorites = {this.props.flagRemoveFromFavorites}\r\n      refreshFilms={this.props.refreshFilms}\r\n    />\r\n    );\r\n  \r\n    return(\r\n      <div className=\"film-list-outer-container\">\r\n        <div className=\"film-list-inner-container\">\r\n            {this.props.renderFirstLine}\r\n          <div className='film-list-comp__list'>\r\n            {listElement}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n","import React from 'react'\r\n\r\nimport './FooterComp.scss';\r\n\r\nexport function FooterComp(props){\r\n  return(\r\n    <div className=\"footer-comp-outer-container\">\r\n      <div className=\"footer-comp-inner-container\">\r\n        netflixroulette\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport {ModalComp} from './../ModalComp/ModalComp';\r\nimport {baseDeployURL} from './../../lib';\r\nimport './SpinnerComp.scss'\r\n\r\nexport function SpinnerComp(props) {\r\n    if (props.isLoading) {\r\n      return (\r\n      <ModalComp>\r\n      <div className='spinner-comp-background'>\r\n        <img  src= {`${baseDeployURL}/img/load.gif`} alt='spinner' />\r\n      </div>\r\n    </ModalComp>\r\n      )\r\n    } else {\r\n      return null;\r\n    }\r\n}","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { Fragment } from 'react'\r\n\r\nimport {SearchComp} from '../../Components/SearchComp/SearchComp';\r\nimport {FilmListComp as FilmList} from '../../Components/FilmListComp/FilmListComp';\r\nimport {FooterComp as Footer} from '../../Components/FooterComp/FooterComp';\r\nimport {SpinnerComp} from './../../Components/SpinnerComp/SpinnerComp';\r\n\r\nimport {getFilmList, baseDeployURL} from '../../lib';\r\nimport './SearchPage.scss';\r\n\r\nexport class SearchPage extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.URLFilm = props.match.params.filmName;\r\n    \r\n    let url = new URL(window.location.href);\r\n    if (!url.searchParams.has('searchByTitle')) {\r\n      this.URLSearchByTitle = true;\r\n      console.log('has',!url.searchParams.has('searchByTitle'))\r\n    }else {\r\n      this.URLSearchByTitle = Boolean(url.searchParams.get('searchByTitle'));\r\n      console.log('get', Boolean(url.searchParams.get('searchByTitle')));\r\n    }\r\n\r\n    console.log(`URLSearchByTitle:${this.URLSearchByTitle}`);\r\n\r\n\r\n    this.state = {\r\n      searchString: this.URLFilm,\r\n      searchByTitle: this.URLSearchByTitle,\r\n      filmList: [],\r\n      isLoading: false,\r\n    };\r\n\r\n    this.handleSearchStringChange = this.handleSearchStringChange.bind(this);\r\n    this.handleSearchByChange = this.handleSearchByChange.bind(this);\r\n    this.handleSearch = this.handleSearch.bind(this);\r\n    this.handleSortByRuntime = this.handleSortByRuntime.bind(this);\r\n    this.handleSortByDate = this.handleSortByDate.bind(this);\r\n  }\r\n\r\n  handleSearchStringChange(e){\r\n    this.setState({\r\n      searchString: e.target.value,\r\n    });\r\n  }\r\n\r\n  handleSearchByChange(isbyTitle){\r\n    this.setState({\r\n      searchByTitle: isbyTitle\r\n    });\r\n  }\r\n  \r\n  loadFilmListToState(){\r\n    this.setState({\r\n      isLoading:true,\r\n    })\r\n    getFilmList({\r\n      searchString:this.state.searchString,\r\n      byTitle:this.state.searchByTitle,\r\n      byDirector: !this.state.searchByTitle,\r\n    })\r\n    .then(result=>{\r\n      this.setState({\r\n        filmList:result,\r\n        isLoading:false,\r\n      });\r\n    });\r\n  }\r\n\r\n  handleSearch(){\r\n    // Если в URL что-то не соотвествует тому что в state - редиректим как в state\r\n    if  ((this.URLFilm !== this.state.searchString) || \r\n        (this.URLSearchByTitle !== this.state.searchByTitle)) {\r\n\r\n      let url= new URL(`${baseDeployURL}/search/${this.state.searchString}`, window.location.origin);\r\n      url.searchParams.set('searchByTitle', this.state.searchByTitle ? 1 :'');\r\n      window.location.assign(url);\r\n\r\n    }\r\n  }\r\n\r\n  sortFilms(byDate){\r\n    let compare;\r\n\r\n    if (byDate) {\r\n      compare = (item1, item2)=>{\r\n        return (+item1.year > +item2.year) ? -1 : 1;\r\n      }\r\n    } else {\r\n      compare = (item1, item2)=>{\r\n        return (+item1.runtime > +item2.runtime) ? -1 : 1;\r\n      }\r\n    }\r\n\r\n    let newList = this.state.filmList.sort(compare);\r\n    this.setState({filmList:newList})\r\n  }\r\n\r\n  handleSortByRuntime(e){\r\n    e.preventDefault();\r\n    this.sortFilms(false);\r\n  }\r\n\r\n  handleSortByDate(e){\r\n    e.preventDefault()\r\n    this.sortFilms(true);\r\n  }  \r\n\r\n  /* рендер-пропс для компонента FilmList */\r\n  renderFistLine(){\r\n    let result;\r\n\r\n    if (this.state.filmList.length) {\r\n\r\n     result = (\r\n        /* сформируем строку вверху */\r\n        <Fragment>\r\n          <div className=\"film-list-comp__top-line\">\r\n            <div>\r\n              {this.state.filmList.length} movies found\r\n            </div>\r\n            <div>\r\n              SORT BY\r\n              <a \r\n                className=\"film-list-comp__sort-by-release-date\" \r\n                href=\"#\" \r\n                onClick={this.handleSortByDate}\r\n              >release date</a>\r\n              <a \r\n                className=\"film-list-comp__sort-by-runtime\" \r\n                href=\"#\"\r\n                onClick={this.handleSortByRuntime}\r\n                >runtime</a>\r\n            </div>\r\n          </div>\r\n        </Fragment>\r\n      )\r\n    } \r\n\r\n    return result;\r\n  }\r\n\r\n  componentDidMount(){\r\n    if (this.state.searchString) {\r\n      this.loadFilmListToState();\r\n    }\r\n\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <React.Fragment>\r\n\r\n        <div className='search-page-header'>\r\n          <SearchComp \r\n            searchString={this.state.searchString}\r\n            searchByTitle={this.state.searchByTitle}\r\n\r\n            onSearchStringChange={this.handleSearchStringChange} \r\n            onSubmit={this.handleSearch}\r\n            onSearchByChange = {this.handleSearchByChange}/>\r\n        </div>\r\n\r\n        <div className='search-page-result'>\r\n          {(this.state.filmList.length) ? \r\n            (\r\n            <FilmList \r\n              renderFirstLine={this.renderFistLine()} \r\n              filmList={this.state.filmList}\r\n              flagAddToFavorites={true}\r\n            />) : \r\n            (\r\n              <div className='search-page-empty-result'>No films found</div>\r\n            )\r\n          }\r\n\r\n        </div>\r\n\r\n        <div className='search-page-footer'>\r\n          <Footer/>\r\n        </div>\r\n\r\n        <SpinnerComp isLoading={this.state.isLoading}/>\r\n      </React.Fragment>\r\n      )\r\n    }\r\n} ","import React from 'react';\r\nimport {baseDeployURL} from './../../lib';\r\nimport './FilmDetailComp.scss';\r\n\r\nexport function FilmDetailComp(props) {\r\n  \r\n  function goToSerachPage(){\r\n    window.location.href=`${baseDeployURL}/search/${props.director}?searchByTitle=`;\r\n  }\r\n\r\n  function goToFavorites(){\r\n    window.location.assign(`${baseDeployURL}/favorites`)\r\n  }\r\n  return (\r\n    <div className='film-detail-comp-outer-container'>\r\n      <div className='film-detail-comp-inner-container'>\r\n\r\n        <div className='film-detail-comp__first-line'>\r\n          <div className='film-detail-comp__first-line-caption'>netflixroulette</div>\r\n          <div>\r\n            <input className='film-detail-comp__first-line-button' type='button' value='Go to SEARCH' onClick={goToSerachPage}/>\r\n            <input className='film-detail-comp__first-line-button' type='button' value='Go to FAVORITES' onClick={goToFavorites}/>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='film-detail-comp__totall-details-container'>\r\n          <div className='film-detail-comp__poster'>\r\n            <img className='film-detail-comp__poster-img' src={props.posterUrl} alt='POSTER IMAGE'/>\r\n          </div>\r\n          <div className='film-detail-comp__details'>\r\n            <div className='film-detail-comp__title'>\r\n              {props.title}\r\n            </div>\r\n            <div className='film-detail-comp__year'>\r\n              {props.year} {props.runtime} min\r\n            </div>\r\n            <div className='film-detail-comp__plot'>\r\n              {props.plot}\r\n            </div>\r\n            <div className='film-detail-comp__director'>\r\n              Director: {props.director}\r\n            </div>\r\n            <div className='film-detail-comp__actors'>\r\n              Cast: {props.actors}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport {FilmListComp as FilmList} from '../../Components/FilmListComp/FilmListComp';\r\nimport {FooterComp as Footer} from '../../Components/FooterComp/FooterComp';\r\nimport {FilmDetailComp} from '../../Components/FilmDetailComp/FilmDetailComp';\r\nimport {getFilmList} from '../../lib';\r\nimport {SpinnerComp} from './../../Components/SpinnerComp/SpinnerComp';\r\n\r\nimport './FilmPage.scss'\r\n\r\nexport class FilmPage extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      filmTitle: props.match.params.filmName,\r\n      filmDesc: {\r\n        posterUrl: '',\r\n        title: '',\r\n        year: '',\r\n        runtime: '',\r\n        plot: '',\r\n        director: '',\r\n        actors: ''\r\n      },\r\n      filmList:[],\r\n      isLoading: false,\r\n    }\r\n  }\r\n\r\n  getFilmDesc(){\r\n    if (this.state.filmTitle) {\r\n      this.setState({\r\n        isLoading: true,\r\n      });\r\n      return getFilmList({\r\n        searchString:this.state.filmTitle, \r\n        byTitle:true\r\n      }).then((result)=>{\r\n        if (Array.isArray(result) && result.length === 1) {\r\n          this.setState({\r\n            filmDesc:{\r\n              posterUrl: result[0].posterUrl,\r\n              title: result[0].title,\r\n              year: result[0].year,\r\n              runtime: result[0].runtime,\r\n              plot: result[0].plot,\r\n              director: result[0].director,\r\n              actors: result[0].actors\r\n            },\r\n            isLoading: false,\r\n          })\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  getFilmListByDirector(){\r\n    if (this.state.filmDesc.director){\r\n      this.setState({\r\n        isLoading: true,\r\n      });      \r\n      return getFilmList({\r\n        searchString: this.state.filmDesc.director,\r\n        byDirector:true,\r\n      }).then((result)=>{\r\n        if (result.length>0){\r\n          this.setState({\r\n            filmList:result,\r\n            isLoading: false,\r\n          })\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.getFilmDesc()\r\n      .then(()=>{\r\n        this.getFilmListByDirector();\r\n      });\r\n  }\r\n\r\n\r\n  render(){\r\n\r\n    return(\r\n      <React.Fragment>\r\n        \r\n        <div className='film-page-header'>\r\n          <FilmDetailComp\r\n            posterUrl={this.state.filmDesc.posterUrl}\r\n            title={this.state.filmDesc.title}\r\n            year={this.state.filmDesc.year}\r\n            runtime = {this.state.filmDesc.runtime}\r\n            plot = {this.state.filmDesc.plot}\r\n            director = {this.state.filmDesc.director}\r\n            actors = {this.state.filmDesc.actors}\r\n          />\r\n        </div>\r\n\r\n        <div className='film-page-content'>\r\n          <FilmList \r\n            renderFirstLine={<div>Films by {this.state.filmDesc.director} </div>}\r\n            filmList={this.state.filmList}\r\n            flagAddToFavorites = {true}\r\n            />\r\n        </div>\r\n        \r\n\r\n        <div className='film-page-footer'>\r\n          <Footer/>\r\n        </div>\r\n\r\n        <SpinnerComp isLoading={this.state.isLoading}/>\r\n        \r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\n","import React from 'react';\r\nimport {FooterComp} from './../../Components/FooterComp/FooterComp';\r\nimport {FilmListComp} from './../../Components/FilmListComp/FilmListComp'\r\nimport {getFilmList, baseDeployURL} from './../../lib';\r\n\r\nimport './FavoritesPage.scss';\r\n\r\nexport class FavoritesPage extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      favoritesList: [],\r\n    }\r\n  }\r\n\r\n  getFavoritesArray=()=>{\r\n    let favString = localStorage.getItem('favoritesArray');\r\n    let favArr=[];\r\n    if (favString) {\r\n      favArr = favString.split(',');\r\n    }   \r\n    return favArr.map((item)=>+item)\r\n  }\r\n\r\n  loadFilmById=(idArray)=>{\r\n    getFilmList({\r\n      searchArray: idArray, \r\n      byID: true,\r\n    }).then((result)=>{\r\n      this.setState({\r\n        favoritesList : result,\r\n      })\r\n    })\r\n  }\r\n\r\n  refreshFilms=()=>{\r\n    this.loadFilmById(this.getFavoritesArray());\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.loadFilmById(this.getFavoritesArray());\r\n  }\r\n\r\n  handleGoToSerach(){\r\n    window.location.assign(`${baseDeployURL}`);\r\n  }\r\n\r\n  \r\n  render(){\r\n\r\n    return(\r\n      <React.Fragment>\r\n        <div className='favorites-page-header'>\r\n          <div className='favorites-page-outer-container'>\r\n            <div className='favorites-page-inner-container'>\r\n              <div className='favorites-page-container'>\r\n                <div className='favorites-page-caption'>\r\n                  YOUR FAVORITES FILMS\r\n                </div>\r\n                <div>\r\n                  <input \r\n                    type='button' \r\n                    className='favorites-page-button'\r\n                    onClick={this.handleGoToSerach}\r\n                    value='go to SEARCH' />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='favorites-page-film-list'>\r\n          {this.state.favoritesList.length === 0 ? \r\n            (\r\n              <div className='favorites-page-empty-result'>No films added to favorites</div>\r\n            )\r\n          : \r\n            (<FilmListComp \r\n              filmList={this.state.favoritesList}\r\n              flagRemoveFromFavorites={true}\r\n              refreshFilms={this.refreshFilms}\r\n            />)\r\n          }\r\n        </div>\r\n\r\n        <div className='favorites-page-fotter'>\r\n          <FooterComp/>\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}","import React from 'react';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\nimport {baseDeployURL} from './lib';\n\nimport 'normalize.css';\nimport './App.scss'\n\nimport {SearchPage} from './Pages/SearchPage/SearchPage'\nimport {FilmPage} from './Pages/FilmPage/FilmPage'\nimport {FavoritesPage} from './Pages/FavoritesPage/FavoritesPage'\n\nfunction App() {\n  return (\n    <div className='application-container'>\n      <Router basename={baseDeployURL}>\n        <Switch>\n\n          <Route path='/search/:filmName' component={SearchPage}/>\n          <Route path='/film/:filmName' component={FilmPage}/>\n          <Route path='/favorites' component ={FavoritesPage}/>\n\n          <Route path='/' component={SearchPage}/>\n\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}